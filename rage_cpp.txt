#include<iostream>
#include<cstdio>
#include<string>
#include<cstring>
#include<cmath>
#define DP 1000
using namespace std;
int nx[4]={1,0,-1,0};
int ny[4]={0,1,0,-1};
int f[DP][DP],s[DP][DP];
int n,x,y;
int count(int xx,int yy)
{
	int ans=0,i;
	s[xx][yy]=0;
	for(i=0;i<4;i++)
	{
		int dx=xx+nx[i],dy=yy+ny[i];
		if(s[dx][dy]>0&&dx>=1&&dx<=x&&dy>=1&&dy<=y)
		{
			ans+=s[dx][dy];
		}
	}
	return ans;
}
int main()
{
	int i,j;
	cin>>n>>x>>y;
	memset(f,0,sizeof(f));
	for(i=1;i<=x;i++)
	{
		for(j=1;j<=y;j++)
		{
			cin>>s[i][j];
		}
	}
	for(i=1;i<=x;i++)
	{
		for(j=1;j<=y;j++)
		{
			int fx=f[i-1][j],fy=f[i][j-1];
			if(fx==0&&fy==0) f[i][j]=count(i,j);
			else if(fx==0&&fy>0) f[i][j]=fy+count(i,j);
			else if(fx>0&&fy==0) f[i][j]=fx+count(i,j);
			else f[i][j]=min(fx,fy)+count(i,j);
		}
	}
	cout<<n-f[x][y]<<endl;
	return 0;
}
